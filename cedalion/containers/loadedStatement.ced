'/bootstrap':signature(loadedStatement(FileName,Cont,CStatement,CVarNames)::'/bootstrap':pred,[FileName::'/bootstrap':string,Cont::'/bootstrap':string,CStatement::'/bootstrap':statement,CVarNames::'/bootstrap':list('/bootstrap':varName)]).
'/util':behavior(containerize(TTerm,CTTerm,Cont)::'/bootstrap':pred,!'should containerize builtin#loadedStatement', (containerize(builtin:loadedStatement(!'bar/baz.ced','/Functional':def('/Functional':applyBinOp(A,'/Functional':numPlus,B),'/bootstrap':number,'/Functional':const(3)),[])::'/bootstrap':pred,Result::'/bootstrap':pred,!foo),'/util':assertEqual(Result,loadedStatement(!'bar/baz.ced',!foo,'foo@/Functional':def('foo@/Functional':applyBinOp(A,'foo@/Functional':numPlus,B),'foo@/bootstrap':number,'foo@/Functional':const(3)),[]),'/bootstrap':pred))).
annotation:shrink((specialTerm(builtin:loadedStatement(FileName,Statement,VNs)::'/bootstrap':pred,loadedStatement(CFileName,Cont,CStatement,CVNs)::'/bootstrap':pred,Cont):-containerize(FileName::'/bootstrap':string,CFileName::'/bootstrap':string,Cont),containerize(Statement::'/bootstrap':statement,CStatement::'/bootstrap':statement,Cont),containerize(VNs::'/bootstrap':list('/bootstrap':varName),CVNs::'/bootstrap':list('/bootstrap':varName),Cont))).
annotation:shrink((specialUncontainerize(loadedStatement(CFileName,_,CStatement,CVNs)::'/bootstrap':pred,builtin:loadedStatement(FileName,Statement,VNs)::'/bootstrap':pred,Cont):-uncontainerize(CFileName::'/bootstrap':string,FileName::'/bootstrap':string,Cont),uncontainerize(CStatement::'/bootstrap':statement,Statement::'/bootstrap':statement,Cont),uncontainerize(CVNs::'/bootstrap':list('/bootstrap':varName),VNs::'/bootstrap':list('/bootstrap':varName),Cont))).
